(function(){"use strict";angular.module("secureNgResource",["ngResource","ngCookies"]),angular.module("secureNgResource").factory("authSession",["$q","$location","$cookieStore",function(e,t,n){var s={sessionName:"angular",loginPath:"/login",defaultPostLoginPath:"/"},a={},o=function(e,t){this.auth=e,this.settings=angular.extend({},s,t),this.priorPath=null,this.state=null,this.managedHttpConfs=[],a[this.cookieKey()]=this;var o=n.get(this.cookieKey());o?this.state=o:this.reset()};o.prototype={getUserName:function(){return this.loggedIn()?this.state.user:void 0},loggedIn:function(){return null!==this.state},login:function(e,s){var a=this,o=function(e){if(angular.isObject(s)&&s[e.status]&&s[e.status](e),"accepted"===e.status){a.state=e.newState,a.reupdateManagedRequestConfs(),n.put(a.cookieKey(),a.state);var o=a.settings.defaultPostLoginPath;null!==a.priorPath&&(o=a.priorPath),t.path(o).replace()}};this.auth.checkLogin(e,o)},logout:function(){this.loggedIn()&&(this.reset(),t.path(this.settings.loginPath))},reset:function(){this.state=null,this.reupdateManagedRequestConfs(),n.remove(this.cookieKey())},cookieKey:function(){return this.settings.sessionName+"-"+this.auth.getAuthType()},updateRequestConf:function(e){e.sessionDictKey=this.cookieKey(),this.loggedIn()&&(e.headers||(e.headers={}),this.auth.addAuthToRequestConf(e,this.state))},manageRequestConf:function(e){this.managedHttpConfs.push({conf:e,original:angular.copy(e)}),this.updateRequestConf(e)},reupdateManagedRequestConfs:function(){var e=this;angular.forEach(this.managedHttpConfs,function(t){for(var n in t.conf)delete t.conf[n];var s=angular.copy(t.original);angular.extend(t.conf,s),e.updateRequestConf(t.conf)})},handleHttpResponse:function(n){var s=this.auth.checkResponse(n);return s.authFailure?(this.reset(),this.priorPath=t.path(),t.path(this.settings.loginPath).replace(),e.reject(n)):n}};var r=function(e,t){return new o(e,t)};return r.dictionary=a,r}]),angular.module("secureNgResource").factory("passwordOAuth",["$http",function(e){var t=function(e,t,n){this.host=e,this.clientId=t,this.clientSecret=n},n=function(e){var t="";return angular.forEach(e,function(e,n){t.length>0&&(t+="&"),t+=n+"="+encodeURIComponent(e)}),t};t.prototype={getAuthType:function(){return"PasswordOAuth"},checkLogin:function(t,s){e({method:"POST",url:this.host+"/oauth/v2/token",headers:{"Content-Type":"application/x-www-form-urlencoded"},data:n({client_id:this.clientId,client_secret:this.clientSecret,grant_type:"password",username:t.user,password:t.pass})}).then(function(e){if(200===e.status&&angular.isString(e.data.access_token)){var n=e.data;s({status:"accepted",newState:{user:t.user,accessToken:n.access_token,accessTokenExpires:(new Date).getTime()+n.expires_in,refreshToken:n.refresh_token}})}else if(400===e.status&&"invalid_grant"===e.data.error)s({status:"denied",msg:"Invalid username or password"});else{var a="HTTP Status "+e.status;0===e.status?a="Unable to connect to authentication server":e.data.error_description&&(a="OAuth:"+e.data.error_description),s({status:"error",msg:a})}})},checkResponse:function(e){var t={};return 401===e.status&&(t.authFailure=!0),t},addAuthToRequestConf:function(e,t){e.headers.Authorization="Bearer "+t.accessToken}};var s=function(e,n,s){return new t(e,n,s)};return s}]),angular.module("secureNgResource").factory("secureResource",["$resource",function(e){var t={get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},remove:{method:"DELETE"},"delete":{method:"DELETE"}};return function(n,s,a,o){var r=angular.extend({},t,o);angular.forEach(r,function(e){n.manageRequestConf(e)}),s=s.replace(/^([^\/].+?)(:\d+\/)/g,"$1\\$2");var i=e(s,a,r);return i}}]),angular.module("secureNgResource").config(["$httpProvider",function(e){e.responseInterceptors.push(["authSession",function(e){var t=function(t){var n=e.dictionary[t.config.sessionDictKey];return n?n.handleHttpResponse(t):t};return function(e){return e.then(t,t)}}])}])})(window);
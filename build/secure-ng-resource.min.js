(function(e){"use strict";angular.module("secureNgResource",["ngResource","ngCookies"]),angular.module("secureNgResource").factory("authSession",["$q","$location","$cookieStore","$injector","$rootScope","$timeout",function(e,t,n,o,r,s){var i={sessionName:"angular",loginPath:"/login",logoutUrl:null,defaultPostLoginPath:"/"},a={},u=function(e,t){this.auth=e,this.settings=angular.extend({},i,t),this.priorPath=null,this.state=null,this.managedHttpConfs=[],this.refreshPromise=null,a[this.cookieKey()]=this;var o=n.get(this.cookieKey());o?this.state=o:this.reset()};u.prototype={getUserName:function(){return this.loggedIn()?this.state.user:void 0},loggedIn:function(){return null!==this.state},login:function(e){var n=this;return this.auth.checkLogin(e).then(function(o){n.state=o.newState,null===n.state||"user"in n.state||(n.state.user=e.user),n._onStateChange();var r=n.settings.defaultPostLoginPath;null!==n.priorPath&&(r=n.priorPath),t.path(r).replace()})},cancelLogin:function(){this.auth.cancelLogin()},refreshLogin:function(){if(!this.loggedIn())throw"Cannot refresh, not logged in.";var e=this;return this.auth.refreshLogin(this.state).then(function(t){var n=e.state.user;e.state=t.newState,null===e.state||"user"in e.state||(e.state.user=n),e._onStateChange()})},logout:function(){if(this.loggedIn()){if(null!==this.settings.logoutUrl){var e=o.get("$http"),n={method:"POST",data:"",url:this.settings.logoutUrl};this.updateRequestConf(n),e(n)}this.reset(),t.path(this.settings.loginPath)}},reset:function(){this.state=null,this._onStateChange()},cookieKey:function(){return this.settings.sessionName+"-"+this.auth.getAuthType()},updateRequestConf:function(e){e.sessionDictKey=this.cookieKey(),this.loggedIn()&&(e.headers||(e.headers={}),this.auth.addAuthToRequestConf(e,this.state))},manageRequestConf:function(e){this.managedHttpConfs.push({conf:e,original:angular.copy(e)}),this.updateRequestConf(e)},reupdateManagedRequestConfs:function(){var e=this;angular.forEach(this.managedHttpConfs,function(t){for(var n in t.conf)delete t.conf[n];var o=angular.copy(t.original);angular.extend(t.conf,o),e.updateRequestConf(t.conf)})},handleHttpResponse:function(n){var o=this.auth.checkResponse(n);return o.authFailure?(this.reset(),this.priorPath=t.path(),t.path(this.settings.loginPath).replace(),e.reject(n)):n},_onStateChange:function(){if(this.reupdateManagedRequestConfs(),null!==this.state){if(n.put(this.cookieKey(),this.state),null!==this.refreshPromise&&s.cancel(this.refreshPromise),"millisecondsToRefresh"in this.state){var e=this;this.refreshPromise=s(function(){e.refreshLogin()},this.state.millisecondsToRefresh)}}else null!==this.refreshPromise&&(s.cancel(this.refreshPromise),this.refreshPromise=null),n.remove(this.cookieKey())}};var c=function(e,t){return new u(e,t)};return c.dictionary=a,c}]),angular.module("secureNgResource").factory("mockAuth",[function(){var e=function(){};e.prototype={getAuthType:function(){return"MockAuth"}};var t=function(){return new e};return t}]),angular.module("secureNgResource").factory("openIDAuth",["$q",function(t){var n={popup:{begin:function(t,n,o){var r=function(){delete e.handleAuthResponse,delete e.openIdPopup};if(e.handleAuthResponse=function(e){r(),e.approved?o.resolve({status:"accepted",newState:{sessionId:e.sessionId,user:e.user||void 0}}):o.reject({status:"denied",msg:e.message||"Access denied"})},e.hasOwnProperty("openIdPopup")&&!e.openIdPopup.closed&&(e.openIdPopup.close(),r()),"object"==typeof t.query){n+="?";var s=!0;angular.forEach(t.query,function(e,t){s?s=!1:n+="&",n+=encodeURIComponent(t),n+="=",n+=encodeURIComponent(e)})}var i="width=450,height=500,location=1,status=1,resizable=yes",a=e.open("","openid_popup",i);a.onclose=function(){r()},a.onbeforeunload=function(){r()},a.document.write('<form id="shimform" method="post" action="'+n+'">'+'<input type="hidden" name="openid_identifier" id="oid" />'+"</form>"),a.document.getElementById("oid").value=t.openid_identifier,a.document.getElementById("shimform").submit(),e.openIdPopup=a},cancel:function(){e.hasOwnProperty("openIdPopup")&&(e.openIdPopup.close(),delete e.openIdPopup,delete e.handleAuthResponse)}}},o=function(e,t){if(this.authUrl=e,this.login=n[t],!this.login)throw"Invalid login mode"};o.prototype={getAuthType:function(){return"OpenIDAuth"},checkLogin:function(e){var n=t.defer();return this.login.begin(e,this.authUrl,n),n.promise},cancelLogin:function(){n.popup.cancel()},refreshLogin:function(){var e=t.defer(),n=e.promise;return e.reject(),n},checkResponse:function(e){var t={};return(401===e.status||403===e.status)&&(t.authFailure=!0),t},addAuthToRequestConf:function(e,t){e.headers.Authorization="SesID "+t.sessionId}};var r=function(e,t){return new o(e,t)};return r}]),angular.module("secureNgResource").factory("passwordOAuth",["$http","$q",function(e,t){var n=function(e,t,n){this.host=e,this.clientId=t,this.clientSecret=n},o=function(e){var t="";return angular.forEach(e,function(e,n){t.length>0&&(t+="&"),t+=n+"="+encodeURIComponent(e)}),t},r=function(e){if(200===e.status&&angular.isString(e.data.access_token)){var t=e.data;return{status:"accepted",newState:{accessToken:t.access_token,accessTokenExpires:(new Date).getTime()+t.expires_in,millisecondsToRefresh:1e3*t.expires_in/2,refreshToken:t.refresh_token}}}if(400===e.status&&"invalid_grant"===e.data.error)return{status:"denied",msg:"Invalid username or password"};var n="HTTP Status "+e.status;return 0===e.status?n="Unable to connect to authentication server":e.data.error_description&&(n="OAuth:"+e.data.error_description),{status:"error",msg:n}};n.prototype={getAuthType:function(){return"PasswordOAuth"},checkLogin:function(n){var s=t.defer();return e({method:"POST",url:this.host+"/oauth/v2/token",headers:{"Content-Type":"application/x-www-form-urlencoded"},data:o({client_id:this.clientId,client_secret:this.clientSecret,grant_type:"password",username:n.user,password:n.pass})}).then(function(e){var t=r(e);"accepted"===t.status?s.resolve(t):s.reject(t)}),s.promise},cancelLogin:function(){},refreshLogin:function(n){var s=t.defer();return e({method:"POST",url:this.host+"/oauth/v2/token",headers:{"Content-Type":"application/x-www-form-urlencoded"},data:o({client_id:this.clientId,client_secret:this.clientSecret,grant_type:"refresh_token",refresh_token:n.refreshToken})}).then(function(e){var t=r(e);"accepted"===t.status?(t.newState.refreshToken||(t.newState.refreshToken=n.refreshToken),s.resolve(t)):s.reject(t)}),s.promise},checkResponse:function(e){var t={};return 401===e.status&&(t.authFailure=!0),t},addAuthToRequestConf:function(e,t){e.headers.Authorization="Bearer "+t.accessToken}};var s=function(e,t,o){return new n(e,t,o)};return s}]),angular.module("secureNgResource").factory("secureResource",["$resource",function(e){var t={get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},remove:{method:"DELETE"},"delete":{method:"DELETE"}};return function(n,o,r,s){var i=angular.extend({},t,s);angular.forEach(i,function(e){n.manageRequestConf(e)}),o=o.replace(/^([^\/].+?)(:\d+\/)/g,"$1\\$2");var a=e(o,r,i);return a}}]),angular.module("secureNgResource").config(["$httpProvider",function(e){e.responseInterceptors.push(["authSession",function(e){var t=function(t){var n=e.dictionary[t.config.sessionDictKey];return n?n.handleHttpResponse(t):t};return function(e){return e.then(t,t)}}])}])})(window);
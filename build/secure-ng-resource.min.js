(function(e){"use strict";angular.module("secureNgResource",["ngResource","ngCookies"]),angular.module("secureNgResource").factory("authSession",["$q","$location","$cookieStore",function(e,t,n){var o={sessionName:"angular",loginPath:"/login",defaultPostLoginPath:"/"},s={},a=function(e,t){this.auth=e,this.settings=angular.extend({},o,t),this.priorPath=null,this.state=null,this.managedHttpConfs=[],s[this.cookieKey()]=this;var a=n.get(this.cookieKey());a?this.state=a:this.reset()};a.prototype={getUserName:function(){return this.loggedIn()?this.state.user:void 0},loggedIn:function(){return null!==this.state},login:function(e,o){var s=this,a=function(e){if(angular.isObject(o)&&o[e.status]&&o[e.status](e),"accepted"===e.status){s.state=e.newState,s.reupdateManagedRequestConfs(),n.put(s.cookieKey(),s.state);var a=s.settings.defaultPostLoginPath;null!==s.priorPath&&(a=s.priorPath),t.path(a).replace()}};this.auth.checkLogin(e,a)},logout:function(){this.loggedIn()&&(this.reset(),t.path(this.settings.loginPath))},reset:function(){this.state=null,this.reupdateManagedRequestConfs(),n.remove(this.cookieKey())},cookieKey:function(){return this.settings.sessionName+"-"+this.auth.getAuthType()},updateRequestConf:function(e){e.sessionDictKey=this.cookieKey(),this.loggedIn()&&(e.headers||(e.headers={}),this.auth.addAuthToRequestConf(e,this.state))},manageRequestConf:function(e){this.managedHttpConfs.push({conf:e,original:angular.copy(e)}),this.updateRequestConf(e)},reupdateManagedRequestConfs:function(){var e=this;angular.forEach(this.managedHttpConfs,function(t){for(var n in t.conf)delete t.conf[n];var o=angular.copy(t.original);angular.extend(t.conf,o),e.updateRequestConf(t.conf)})},handleHttpResponse:function(n){var o=this.auth.checkResponse(n);return o.authFailure?(this.reset(),this.priorPath=t.path(),t.path(this.settings.loginPath).replace(),e.reject(n)):n}};var r=function(e,t){return new a(e,t)};return r.dictionary=s,r}]),angular.module("secureNgResource").factory("openIDAuth",[function(){var t=function(e,t,n){this.host=e,this.beginPath=t,this.cookieName=n};t.prototype={getAuthType:function(){return"OpenIDAuth"},checkLogin:function(t,n){e.handleAuthResponse=function(t){delete e.handleAuthResponse,t.approved?n({status:"accepted",newState:{user:t.user,cookieVal:t.cookieVal}}):n({status:"denied",msg:t.message||"Access denied"})};var o="width=450,height=500,location=1,status=1,resizable=yes",s=e.open("","openid_popup",o);s.document.write('<form id="shimform" method="post" action="'+this.host+this.beginPath+'">'+'<input type="hidden" name="openid_identifier" id="oid" />'+"</form>");var a=t.openid_identifier;s.document.getElementById("oid").value=a,s.document.getElementById("shimform").submit()},checkResponse:function(e){var t={};return(401===e.status||403===e.status)&&(t.authFailure=!0),t},addAuthToRequestConf:function(e,t){var n=this.cookieName+"="+encodeURIComponent(t.cookieVal);e.headers.Cookie?e.headers.Cookie+="; "+n:e.headers.Cookie=n}};var n=function(e,n,o){return new t(e,n,o)};return n}]),angular.module("secureNgResource").factory("passwordOAuth",["$http",function(e){var t=function(e,t,n){this.host=e,this.clientId=t,this.clientSecret=n},n=function(e){var t="";return angular.forEach(e,function(e,n){t.length>0&&(t+="&"),t+=n+"="+encodeURIComponent(e)}),t};t.prototype={getAuthType:function(){return"PasswordOAuth"},checkLogin:function(t,o){e({method:"POST",url:this.host+"/oauth/v2/token",headers:{"Content-Type":"application/x-www-form-urlencoded"},data:n({client_id:this.clientId,client_secret:this.clientSecret,grant_type:"password",username:t.user,password:t.pass})}).then(function(e){if(200===e.status&&angular.isString(e.data.access_token)){var n=e.data;o({status:"accepted",newState:{user:t.user,accessToken:n.access_token,accessTokenExpires:(new Date).getTime()+n.expires_in,refreshToken:n.refresh_token}})}else if(400===e.status&&"invalid_grant"===e.data.error)o({status:"denied",msg:"Invalid username or password"});else{var s="HTTP Status "+e.status;0===e.status?s="Unable to connect to authentication server":e.data.error_description&&(s="OAuth:"+e.data.error_description),o({status:"error",msg:s})}})},checkResponse:function(e){var t={};return 401===e.status&&(t.authFailure=!0),t},addAuthToRequestConf:function(e,t){e.headers.Authorization="Bearer "+t.accessToken}};var o=function(e,n,o){return new t(e,n,o)};return o}]),angular.module("secureNgResource").factory("secureResource",["$resource",function(e){var t={get:{method:"GET"},save:{method:"POST"},query:{method:"GET",isArray:!0},remove:{method:"DELETE"},"delete":{method:"DELETE"}};return function(n,o,s,a){var r=angular.extend({},t,a);angular.forEach(r,function(e){n.manageRequestConf(e)}),o=o.replace(/^([^\/].+?)(:\d+\/)/g,"$1\\$2");var i=e(o,s,r);return i}}]),angular.module("secureNgResource").config(["$httpProvider",function(e){e.responseInterceptors.push(["authSession",function(e){var t=function(t){var n=e.dictionary[t.config.sessionDictKey];return n?n.handleHttpResponse(t):t};return function(e){return e.then(t,t)}}])}])})(window);